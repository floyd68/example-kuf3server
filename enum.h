#pragma once

enum class OBJ_TYPE
{
	OBJ_PLAYER,
	OBJ_ENEMY,
	OBJ_PLAYERATTACKBOX,
	OBJ_ENEMYATTACKBOX,
	OBJ_WARNINGBOX,
	OBJ_ITEM,
	OBJ_CURSOR,
	OBJ_END
};

enum class COMPONENT_ID
{
	COM_POS,
	COM_STATPLAYER,
	COM_STATENEMY,
	COM_RENDER,
	COM_COLLIDER,
	COM_ATTACK,
	COM_PLAYERATTACKBOX,
	COM_ENEMYATTACKBOX,
	COM_WARNINGBOX,
	COM_INPUT,
	COM_CREATE,
	COM_AI,
	COM_AI_SKELETON,
	COM_AI_GHOST,
	COM_AI_MUSHROOM,
	COM_AI_MAGE,
	COM_AI_GOBLIN,
	COM_AI_MINOTA,
	COM_AI_DRAGON,
	COM_GUAGE,
	COM_ITEM,
	COM_CURSOR,
	COM_END
};

enum class RENDER_VALUE
{
	E_RECT,
	E_CIRCLE,
	E_RECT_N,
	E_CIRCLE_N,
};

enum class UNIT_DIRECTION
{
	DIR_LEFT_UP,
	DIR_UP,
	DIR_RIGHT_UP,
	DIR_LEFT,
	DIR_HALT,
	DIR_RIGHT,
	DIR_LEFT_DOWN,
	DIR_DOWN,
	DIR_RIGHT_DOWN,
};

enum class ATTACK_TYPE
{
	ATT_ONECELL,
	ATT_TRIPLE,
	ATT_FOURWAY,
	ATT_RAPIER,
	ATT_SHOTGUN,
	ATT_RIFLE,
	ATT_FIRE,
	ATT_ONEWAY
};

enum class ITEM_ID
{
	ITEM_SPEEDUP,
	ITEM_HP,
	ITEM_ATT,
	ITEM_TRICELL,
	ITEM_FOURCELL,
	ITEM_RAPIER,
	ITEM_SHOTGUN,
	ITEM_RIFLE,
};

enum class ENTITY_TYPE
{
	TY_PLAYER,
	TY_OTHER_PLAYER,
	TY_BAT,
	TY_SKELETON,
	TY_ZOMBI,
	TY_GHOST,
	TY_MUSHROOM,
	TY_MAGE,
	TY_GOBLIN,
	TY_MINOTA,
	TY_DRAGON,
	TY_ATTACKBOX,
	TY_WARNINGBOX,
	TY_SPEEDUP,
	TY_HP,
	TY_ATT,
	TY_TRICELL,
	TY_FOURCELL,
	TY_RAPIER,
	TY_SHOTGUN,
	TY_RIFLE,
	TY_END
};

enum class DO_ATTR
{
	ATTR,
	DO
};

